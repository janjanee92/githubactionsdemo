name: Continuous Integration Demo

on:
  push:
    branches: [main, feature/branch]

  workflow_dispatch:
  
jobs:
  build:
    runs-on:  ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run a one-line script
        run: echo Hello, world!

  get-the-files:
    runs-on:  ubuntu-latest

    steps:
      - name: running a custom step
        run: |
          ls -al

#      - name: Log in with Azure action
#        uses: azure/login@v1
#        with:
#          creds: '${{ secrets.AZURE_CREDENTIALS }}'
#
#      - uses: azure/aks-set-context@v1
#        with:
#          creds: '${{ secrets.AZURE_CREDENTIALS }}'
#          cluster-name: githubactionsaks
#          resource-group: DefaultResourceGroup-SE
#
##      - run: |
##          kubectl create namespace githubrg
#
#      - run: |
#          kubectl apply -f pod.yaml
#
#      - name: RUN AZ Command
#        run: |
#          az account show
#          az group list

  get-the-multilinetask:
    runs-on: ubuntu-latest

    steps:
      - name: Run a multi-line script
        if: always()
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: check java version
        run: java -version
      - name: gradle build
        run: gradle build
      - name: gradlew build
        run: ./gradlew build
      - name: docker version
        run: |
          docker -v
          docker images -a
      - name: docker build
        run: |
          docker build . -t watrv41/demo-kotlin2.0
          docker images -a
#      - name: docker login
#        run: docker login -u ${{ secrets.dockerhubusername}} -p ${{ secrets.dockerhubpassword }}
#      - name: docker image push
#        run: docker push watrv41/demo-kotlin2.0

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.dockerhubusername }}
          password: ${{ secrets.dockerhubpassword }}

      - name: use github_env var
        run: |
          echo "SHORTEN_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo $GITHUB_ENV
      - name: docker build using github_env
        run: |
          docker build -t watrv41/$SHORTEN_SHA .
          docker push watrv41/$SHORTEN_SHA

#      - name: docker image tag
#        env:
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t watrv41/${GITHUB_SHA::8} .
#          docker push watrv41/${GITHUB_SHA::8}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: watrv41/demo-kotlin2.0